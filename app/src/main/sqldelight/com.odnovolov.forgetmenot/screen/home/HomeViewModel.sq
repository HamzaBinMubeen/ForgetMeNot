deckPreview:
SELECT
    deckId,
    deckName,
    passedLaps,
    learnedCount,
    totalCount,
    numberOfCardsReadyForExercise,
    isSelected
FROM
    (
     SELECT
         deckId,
         Deck.name AS deckName,
         min(CASE WHEN Card.isLearned = 0 THEN Card.lap ELSE NULL END) AS passedLaps,
         count(CASE WHEN Card.isLearned == 1 THEN 1 ELSE NULL END) AS learnedCount,
         count(*) AS totalCount,
         CASE
             WHEN 0 != 0 THEN min(0) -- just help sqldelight infer type (Long?)
             WHEN ExercisePreference.intervalSchemeId IS NULL THEN NULL
             ELSE count(
                        CASE
                            WHEN Card.isLearned == 1 THEN NULL
                            WHEN Card.lastAnsweredAt IS NULL THEN 1
                            WHEN datetime(
                                          Card.lastAnsweredAt,
                                          CASE
                                              WHEN Interval.value IS NOT NULL THEN Interval.value
                                              ELSE (
                                                    SELECT value FROM Interval i
                                                    WHERE i.intervalSchemeId == IntervalScheme.id
                                                          AND targetLevelOfKnowledge == (
                                                              SELECT max(targetLevelOfKnowledge)
                                                              FROM Interval i2
                                                              GROUP BY i2.intervalSchemeId
                                                              HAVING i2.intervalSchemeId == IntervalScheme.id
                                                          )
                                                   )
                                          END
                                         ) < datetime('now') THEN 1
                            ELSE NULL
                        END
                       )
         END AS numberOfCardsReadyForExercise,
         Deck.id IN (SELECT * FROM DeckSelection) AS isSelected,
         Deck.createdAt,
         Deck.lastOpenedAt
     FROM
         Card
         JOIN Deck ON Deck.id == Card.deckId
         JOIN ExercisePreference ON ExercisePreference.id == Deck.exercisePreferenceId
         LEFT JOIN IntervalScheme ON IntervalScheme.id == ExercisePreference.intervalSchemeId
         LEFT JOIN Interval ON Interval.intervalSchemeId == IntervalScheme.id
                               AND Interval.targetLevelOfKnowledge - 1 == Card.levelOfKnowledge
     WHERE
         CASE
             WHEN length((SELECT searchText FROM HomeState)) > 0
                 THEN Deck.name LIKE '%'||(SELECT searchText FROM HomeState)||'%'
             ELSE 1
         END
     GROUP BY
         Deck.id
    )
WHERE
    CASE
        WHEN (SELECT displayOnlyWithTasks FROM DeckReviewPreferences)
            THEN numberOfCardsReadyForExercise IS NULL OR numberOfCardsReadyForExercise > 0
        ELSE 1
    END
ORDER BY
    CASE (SELECT deckSorting FROM DeckReviewPreferences)
        WHEN 'BY_LAST_CREATED' THEN createdAt
        WHEN 'BY_LAST_OPENED' THEN lastOpenedAt
    END DESC,
    deckName ASC;

displayOnlyWithTasks:
SELECT displayOnlyWithTasks FROM DeckReviewPreferences;