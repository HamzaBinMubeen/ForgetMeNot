setCurrentExerciseCardIdByPosition:
UPDATE Exercise SET currentExerciseCardId = (
    SELECT id
    FROM ExerciseCard
    ORDER BY id
    LIMIT 1
    OFFSET :position
);

setLearnedForCurrentCard:
UPDATE Card SET isLearned = ? WHERE id == (SELECT cardId FROM CurrentExerciseCard);

isNeedToAutoSpeak:
SELECT questionAutoSpeak AND isLearned == 0 AND isAnswerCorrect IS NULL
FROM CurrentExercisePronunciation, CurrentExerciseCard;

speakingDataForQuestionAutoSpeak:
SELECT
    question AS text,
    questionLanguage AS language,
    doNotSpeakTextInBrackets
FROM CurrentExerciseCard, CurrentExercisePronunciation;

speakingDataForAnswerAutoSpeak:
SELECT
    answer AS text,
    answerLanguage AS language,
    doNotSpeakTextInBrackets
FROM CurrentExerciseCard, CurrentExercisePronunciation;

speakingData:
SELECT
    CASE
        WHEN '' != questionTextSelection THEN questionTextSelection
        WHEN '' != answerTextSelection THEN answerTextSelection
        WHEN isAnswerCorrect IS NOT NULL THEN answer
        ELSE question
    END AS text,
    CASE
        WHEN '' != questionTextSelection THEN questionLanguage
        WHEN '' != answerTextSelection THEN answerLanguage
        WHEN isAnswerCorrect IS NOT NULL THEN answerLanguage
        ELSE questionLanguage
    END AS language,
    doNotSpeakTextInBrackets
FROM Exercise, CurrentExercisePronunciation, CurrentExerciseCard;

answerAutoSpeakTriggered:
SELECT answerAutoSpeakTriggered FROM Exercise;

flushAnswerAutoSpeakTriggered:
UPDATE Exercise SET answerAutoSpeakTriggered = 0;

setLevelOfKnowledge:
UPDATE Card SET levelOfKnowledge = ? WHERE id == (
    SELECT cardId FROM CurrentExerciseCard
);

setIsLevelOfKnowledgeEditedByUserTrue:
UPDATE ExerciseCard SET isLevelOfKnowledgeEditedByUser = 1 WHERE cardId == (
    SELECT cardId FROM CurrentExerciseCard
);

cleanEditCardState:
DELETE FROM EditCardState;

initEditCardState:
INSERT INTO EditCardState
SELECT question, answer FROM Card WHERE id == (
    SELECT cardId FROM CurrentExerciseCard
);