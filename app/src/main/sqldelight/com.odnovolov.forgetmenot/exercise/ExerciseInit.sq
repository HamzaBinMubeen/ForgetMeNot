createTableExercise:
CREATE TABLE IF NOT EXISTS TempExercise (
    currentExerciseCardId INTEGER,
    testMethod INTEGER NOT NULL, -- AS TestMethod
    pronunciationId INTEGER NOT NULL,
    questionTextSelection TEXT NOT NULL DEFAULT '',
    answerTextSelection TEXT NOT NULL DEFAULT '',
    answerAutoSpeakTriggered INTEGER AS Boolean NOT NULL DEFAULT 0
);

cleanTableExercise:
DELETE FROM TempExercise;

initExercise:
INSERT INTO TempExercise(testMethod, pronunciationId)
SELECT testMethod, pronunciationId FROM ExercisePreference WHERE id == (
    SELECT exercisePreferenceId FROM Deck WHERE id == ?
);

createViewCurrentExerciseCard:
CREATE VIEW IF NOT EXISTS TempCurrentExerciseCard
AS SELECT TempExerciseCard.*,
          Card.deckId,
          Card.ordinal,
          Card.question,
          Card.answer,
          Card.lap,
          Card.isLearned,
          Card.levelOfKnowledge,
          Card.lastAnsweredAt
FROM TempExerciseCard LEFT JOIN Card ON TempExerciseCard.cardId == Card.id
WHERE TempExerciseCard.id == (SELECT currentExerciseCardId FROM TempExercise);

createViewExercisePronunciation:
CREATE VIEW IF NOT EXISTS TempExercisePronunciation
AS SELECT * FROM Pronunciation WHERE id == (SELECT pronunciationId FROM TempExercise);

createTriggerObserveAnswerAutoSpeakEvent:
CREATE TRIGGER IF NOT EXISTS TempObserveAnswerAutoSpeakEvent
AFTER UPDATE OF isAnswerCorrect ON TempExerciseCard
WHEN old.isAnswerCorrect IS NULL AND (SELECT answerAutoSpeak FROM TempExercisePronunciation) == 1
BEGIN
    UPDATE TempExercise SET answerAutoSpeakTriggered = 1;
END;