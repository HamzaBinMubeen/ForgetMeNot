dropTableExercise:
DROP TABLE IF EXISTS Exercise;

createTableExercise:
CREATE TEMPORARY TABLE Exercise (
    currentExerciseCardId INTEGER,
    testMethod INTEGER NOT NULL, -- AS TestMethod
    pronunciationId INTEGER NOT NULL,
    questionTextSelection TEXT NOT NULL DEFAULT '',
    answerTextSelection TEXT NOT NULL DEFAULT '',
    answerAutoSpeakTriggered INTEGER AS Boolean NOT NULL DEFAULT 0
);

initExercise:
INSERT INTO Exercise(testMethod, pronunciationId)
SELECT testMethod, pronunciationId FROM ExercisePreference WHERE id == (
    SELECT exercisePreferenceId FROM Deck WHERE id == ?
);

createViewCurrentExerciseCard:
CREATE TEMPORARY VIEW IF NOT EXISTS CurrentExerciseCard
AS SELECT ExerciseCard.*,
          Card.deckId,
          Card.ordinal,
          Card.question,
          Card.answer,
          Card.lap,
          Card.isLearned,
          Card.levelOfKnowledge,
          Card.lastAnsweredAt
FROM ExerciseCard LEFT JOIN Card ON ExerciseCard.cardId == Card.id
WHERE ExerciseCard.id == (SELECT currentExerciseCardId FROM Exercise);

createViewExercisePronunciation:
CREATE TEMPORARY VIEW IF NOT EXISTS ExercisePronunciation
AS SELECT * FROM Pronunciation WHERE id == (SELECT pronunciationId FROM Exercise);

createTriggerObserveAnswerAutoSpeakEvent:
CREATE TEMPORARY TRIGGER IF NOT EXISTS observeAnswerAutoSpeakEvent
AFTER UPDATE OF isAnswerCorrect ON ExerciseCard
WHEN old.isAnswerCorrect IS NULL AND (SELECT answerAutoSpeak FROM ExercisePronunciation) == 1
BEGIN
    UPDATE Exercise SET answerAutoSpeakTriggered = 1;
END;