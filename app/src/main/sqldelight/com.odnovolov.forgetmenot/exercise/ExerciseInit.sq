createStateIfNotExists:
CREATE TABLE IF NOT EXISTS TempExercise (
    currentExerciseCardId INTEGER,
    questionTextSelection TEXT NOT NULL DEFAULT '',
    answerTextSelection TEXT NOT NULL DEFAULT '',
    answerAutoSpeakTriggered INTEGER AS Boolean NOT NULL DEFAULT 0
);

cleanState:
DELETE FROM TempExercise;

initState:
INSERT INTO TempExercise DEFAULT VALUES;

createViewCurrentExerciseCard:
CREATE VIEW IF NOT EXISTS TempCurrentExerciseCard
AS SELECT TempExerciseCard.*,
          Card.deckId,
          Card.ordinal,
          CASE WHEN isReverse THEN Card.answer ELSE Card.question END AS question,
          CASE WHEN isReverse THEN Card.question ELSE Card.answer END AS answer,
          Card.lap,
          Card.isLearned,
          Card.levelOfKnowledge,
          Card.lastAnsweredAt
FROM TempExerciseCard JOIN Card ON TempExerciseCard.cardId == Card.id
WHERE TempExerciseCard.id == (SELECT currentExerciseCardId FROM TempExercise);

createViewCurrentExercisePronunciation:
CREATE VIEW IF NOT EXISTS TempCurrentExercisePronunciation
AS SELECT
    CASE WHEN isReverse THEN answerLanguage ELSE questionLanguage END AS questionLanguage,
    CASE WHEN isReverse THEN questionLanguage ELSE answerLanguage END AS answerLanguage,
    CASE WHEN isReverse THEN answerAutoSpeak ELSE questionAutoSpeak END AS questionAutoSpeak,
    CASE WHEN isReverse THEN questionAutoSpeak ELSE answerAutoSpeak END AS answerAutoSpeak
FROM Pronunciation JOIN TempExerciseCard ON Pronunciation.id == TempExerciseCard.pronunciationId
WHERE TempExerciseCard.id == (SELECT currentExerciseCardId FROM TempExercise);

createTriggerObserveAnswerAutoSpeakEvent:
CREATE TRIGGER IF NOT EXISTS TempObserveAnswerAutoSpeakEvent
AFTER UPDATE OF isAnswerCorrect ON TempExerciseCard
WHEN old.isAnswerCorrect IS NULL
     AND (SELECT answerAutoSpeak FROM TempCurrentExercisePronunciation) == 1
BEGIN
    UPDATE TempExercise SET answerAutoSpeakTriggered = 1;
END;