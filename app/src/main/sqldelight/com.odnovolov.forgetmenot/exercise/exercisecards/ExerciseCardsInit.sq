dropTableExerciseCard:
DROP TABLE IF EXISTS TempExerciseCard;

createTableExerciseCard:
CREATE TABLE TempExerciseCard (
    id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
    cardId INTEGER NOT NULL,
    initialLevelOfKnowledge INTEGER AS Int NOT NULL,
    isAnswerCorrect INTEGER AS Boolean
);

initExerciseCard:
INSERT INTO TempExerciseCard (cardId, initialLevelOfKnowledge)
    SELECT
        Card.id,
        Card.levelOfKnowledge
    FROM
        Card
        LEFT JOIN Deck ON Card.deckId == Deck.id
        LEFT JOIN ExercisePreference ON Deck.exercisePreferenceId == ExercisePreference.id
        LEFT JOIN IntervalScheme ON ExercisePreference.intervalSchemeId == IntervalScheme.id
        LEFT JOIN Interval ON IntervalScheme.id == Interval.intervalSchemeId
                              AND Card.levelOfKnowledge == Interval.targetLevelOfKnowledge - 1
    WHERE
         Deck.id == ?
         AND Card.isLearned == 0
         AND (
             ExercisePreference.intervalSchemeId IS NULL
                 OR
             Card.lastAnsweredAt IS NULL
                 OR
             datetime(
                      Card.lastAnsweredAt,
                      ifNull(Interval.value, (SELECT max(value)
                                              FROM Interval
                                              WHERE Interval.intervalSchemeId == IntervalScheme.id))
                     ) < datetime('now')
         )
    ORDER BY lap, random(); -- TODO check whether random mode is on