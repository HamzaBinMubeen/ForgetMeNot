createTableExerciseCard:
CREATE TABLE IF NOT EXISTS TempExerciseCard (
    id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
    cardId INTEGER NOT NULL,
    initialLevelOfKnowledge INTEGER AS Int NOT NULL,
    isAnswerCorrect INTEGER AS Boolean,
    isQuestionDisplayed INTEGER AS Boolean NOT NULL
);

cleanTableExerciseCard:
DELETE FROM TempExerciseCard;

initExerciseCard:
INSERT INTO TempExerciseCard (cardId, initialLevelOfKnowledge, isQuestionDisplayed)
SELECT
    Card.id,
    Card.levelOfKnowledge,
    ExercisePreference.isQuestionDisplayed
FROM
    Card
    LEFT JOIN Deck ON Card.deckId == Deck.id
    LEFT JOIN ExercisePreference ON Deck.exercisePreferenceId == ExercisePreference.id
    LEFT JOIN IntervalScheme ON ExercisePreference.intervalSchemeId == IntervalScheme.id
    LEFT JOIN Interval ON IntervalScheme.id == Interval.intervalSchemeId
                          AND Card.levelOfKnowledge == Interval.targetLevelOfKnowledge - 1
WHERE
     Deck.id == ? OR Deck.id IN (SELECT * FROM TempDeckSelection)
     AND Card.isLearned == 0
     AND (
         ExercisePreference.intervalSchemeId IS NULL
             OR
         Card.lastAnsweredAt IS NULL
             OR
         datetime(
                  Card.lastAnsweredAt,
                  ifNull(Interval.value, (SELECT max(value)
                                          FROM Interval
                                          WHERE Interval.intervalSchemeId == IntervalScheme.id))
                 ) < datetime('now')
     )
ORDER BY lap, random(); -- TODO check whether random mode is on