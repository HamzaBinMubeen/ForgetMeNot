setQuestionTextSelection:
UPDATE TempExercise SET questionTextSelection = ?;

setAnswerTextSelection:
UPDATE TempExercise SET answerTextSelection = ?;

isAnswerCorrect:
SELECT isAnswerCorrect FROM TempExerciseCard WHERE id == ?;

updateLastAnsweredAt:
UPDATE Card SET lastAnsweredAt = datetime('now') WHERE Card.id == (
    SELECT cardId FROM TempExerciseCard WHERE id == ?
);

incrementLapIfCardIsAnsweredForTheFirstTime:
UPDATE Card
SET lap = lap + 1
WHERE Card.id == (SELECT cardId FROM TempExerciseCard WHERE TempExerciseCard.id == :exerciseCardId)
  AND CASE
          WHEN EXISTS (
                       SELECT * FROM TempExerciseCard
                       WHERE cardId == (
                                        SELECT cardId FROM TempExerciseCard
                                        WHERE TempExerciseCard.id == :exerciseCardId
                                       )
                             AND isAnswerCorrect IS NOT NULL
                      )
              THEN 0
          ELSE 1
      END;

setAnswerCorrect:
UPDATE TempExerciseCard SET isAnswerCorrect = ? WHERE id = ?;

deleteAllRepeatedCardsOnTheRight:
DELETE FROM TempExerciseCard
WHERE cardId == (SELECT cardId FROM TempExerciseCard WHERE id = :exerciseCardId)
      AND id > :exerciseCardId;

isThereAnyRepeatedCardOnTheRight:
SELECT
    CASE
        WHEN EXISTS (
                     SELECT * FROM TempExerciseCard
                     WHERE cardId == (SELECT cardId FROM TempExerciseCard WHERE id = :exerciseCardId)
                       AND id > :exerciseCardId
                    )
            THEN 1
        ELSE 0
    END;

addRepeatedCard:
INSERT INTO TempExerciseCard(cardId, initialLevelOfKnowledge, isQuestionDisplayed)
SELECT cardId,
       initialLevelOfKnowledge,
       (SELECT isQuestionDisplayed FROM ExercisePreference WHERE id == (
           SELECT exercisePreferenceId FROM Deck WHERE id == (
               SELECT deckId FROM Card WHERE id == (
                   SELECT cardId FROM TempExerciseCard WHERE id = :exerciseCardId
               )
           )
       ))
FROM TempExerciseCard WHERE id == :exerciseCardId;

updateLevelOfKnowledge:
WITH
    Extra AS (
        SELECT count(CASE WHEN isAnswerCorrect = 0 THEN 1 ELSE NULL END) AS numberOfWrong,
               count(CASE WHEN isAnswerCorrect = 1 THEN 1 ELSE NULL END) AS numberOfCorrect,
               initialLevelOfKnowledge,
               cardId
        FROM TempExerciseCard
        WHERE cardId == (SELECT cardId FROM TempExerciseCard WHERE id = :exerciseCardId)
    )
UPDATE Card
SET levelOfKnowledge = CASE
                           WHEN (SELECT numberOfWrong FROM Extra) > 0
                               THEN (SELECT max(0, initialLevelOfKnowledge - numberOfWrong) FROM Extra)
                           WHEN (SELECT numberOfCorrect FROM Extra) > 0
                               THEN (SELECT initialLevelOfKnowledge + 1 FROM Extra)
                           ELSE levelOfKnowledge
                       END
WHERE id == (SELECT cardId FROM Extra);

setIsQuestionDisplayedTrue:
UPDATE TempExerciseCard SET isQuestionDisplayed = 1 WHERE id == ?;