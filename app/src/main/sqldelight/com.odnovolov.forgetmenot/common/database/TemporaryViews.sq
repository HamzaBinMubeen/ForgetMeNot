currentExerciseCard:
CREATE TEMPORARY VIEW CurrentExerciseCard
AS SELECT ExerciseCard.*,
          Card.deckId,
          Card.ordinal,
          CASE WHEN isReverse THEN Card.answer ELSE Card.question END AS question,
          CASE WHEN isReverse THEN Card.question ELSE Card.answer END AS answer,
          Card.lap,
          Card.isLearned,
          Card.levelOfKnowledge,
          Card.lastAnsweredAt
FROM ExerciseCard JOIN Card ON ExerciseCard.cardId == Card.id
WHERE ExerciseCard.id == (SELECT currentExerciseCardId FROM Exercise);

currentExercisePronunciation:
CREATE TEMPORARY VIEW CurrentExercisePronunciation
AS SELECT
    CASE WHEN isReverse THEN answerLanguage ELSE questionLanguage END AS questionLanguage,
    CASE WHEN isReverse THEN questionLanguage ELSE answerLanguage END AS answerLanguage,
    CASE
        WHEN isWalkingMode THEN 1
        WHEN isReverse THEN answerAutoSpeak
        ELSE questionAutoSpeak
    END AS questionAutoSpeak,
    CASE
        WHEN isWalkingMode THEN 1
        WHEN isReverse THEN questionAutoSpeak
        ELSE answerAutoSpeak
    END AS answerAutoSpeak,
    doNotSpeakTextInBrackets
FROM Pronunciation
     JOIN ExerciseCard ON Pronunciation.id == ExerciseCard.pronunciationId
     JOIN Exercise
WHERE ExerciseCard.id == (SELECT currentExerciseCardId FROM Exercise);

currentExercisePreference:
CREATE TEMPORARY VIEW CurrentExercisePreference
AS SELECT ExercisePreference.*
FROM DeckSettingsState
     JOIN Deck ON Deck.id == DeckSettingsState.deckId
     JOIN ExercisePreference ON ExercisePreference.id == Deck.exercisePreferenceId;

currentRepetitionCard:
CREATE TEMPORARY VIEW CurrentRepetitionCard
AS SELECT RepetitionCard.*,
          Card.deckId,
          Card.ordinal,
          CASE WHEN isReverse THEN Card.answer ELSE Card.question END AS question,
          CASE WHEN isReverse THEN Card.question ELSE Card.answer END AS answer,
          Card.lap,
          Card.isLearned,
          Card.levelOfKnowledge,
          Card.lastAnsweredAt
FROM RepetitionCard JOIN Card ON RepetitionCard.cardId == Card.id
WHERE RepetitionCard.id == (SELECT currentRepetitionCardId FROM RepetitionState);

currentRepetitionPronunciation:
CREATE TEMPORARY VIEW CurrentRepetitionPronunciation
AS SELECT
    CASE WHEN isReverse THEN answerLanguage ELSE questionLanguage END AS questionLanguage,
    CASE WHEN isReverse THEN questionLanguage ELSE answerLanguage END AS answerLanguage,
    doNotSpeakTextInBrackets
FROM Pronunciation JOIN RepetitionCard ON Pronunciation.id == RepetitionCard.pronunciationId
WHERE RepetitionCard.id == (SELECT currentRepetitionCardId FROM RepetitionState);