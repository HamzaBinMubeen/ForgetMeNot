import com.odnovolov.forgetmenot.common.entity.CardReverse;
import com.odnovolov.forgetmenot.common.entity.KeyGesture;
import com.odnovolov.forgetmenot.common.entity.KeyGestureAction;
import com.odnovolov.forgetmenot.common.entity.SpeakEvent;
import com.odnovolov.forgetmenot.common.entity.TestMethod;
import com.odnovolov.forgetmenot.screen.home.decksorting.DeckSorting;
import java.lang.Boolean;
import java.util.Calendar;
import java.util.Locale;

CREATE TABLE Deck (
    id INTEGER PRIMARY KEY,
    name TEXT NOT NULL UNIQUE CHECK (name != ''),
    createdAt TEXT NOT NULL CHECK (date(createdAt) IS NOT NULL),
    lastOpenedAt TEXT CHECK (lastOpenedAt IS NULL OR date(lastOpenedAt) IS NOT NULL),
    exercisePreferenceId INTEGER NOT NULL DEFAULT 0 REFERENCES ExercisePreference ON DELETE SET DEFAULT
);

CREATE TABLE Card (
    id INTEGER PRIMARY KEY,
    deckId INTEGER NOT NULL REFERENCES Deck ON DELETE CASCADE,
    ordinal INTEGER AS Int NOT NULL,
    question TEXT NOT NULL CHECK (question != ''),
    answer TEXT NOT NULL CHECK (answer != ''),
    lap INTEGER AS Int NOT NULL DEFAULT 0 CHECK (lap >= 0),
    isLearned INTEGER AS Boolean NOT NULL DEFAULT 0 CHECK (isLearned IN (0, 1)),
    levelOfKnowledge INTEGER AS Int NOT NULL DEFAULT 0 CHECK (levelOfKnowledge >= 0),
    lastAnsweredAt TEXT CHECK (lastAnsweredAt IS NULL OR date(lastAnsweredAt) IS NOT NULL)
);

CREATE INDEX CardDeckIdIndex ON Card(deckId);

CREATE TABLE DeckReviewFiltration (
    onlyWithTasks INTEGER AS Boolean NOT NULL DEFAULT 0 CHECK (onlyWithTasks IN (0, 1))
);

INSERT INTO DeckReviewFiltration DEFAULT VALUES;

CREATE TABLE DeckReviewSorting (
    criterion TEXT AS DeckSorting.Criterion NOT NULL DEFAULT 'LAST_OPENED_AT',
    direction TEXT AS DeckSorting.Direction NOT NULL DEFAULT 'ASC'
);

INSERT INTO DeckReviewSorting DEFAULT VALUES;

CREATE TABLE IntervalScheme (
    id INTEGER PRIMARY KEY,
    name TEXT NOT NULL DEFAULT ''
);

INSERT INTO IntervalScheme(id) VALUES (0);

CREATE TABLE Interval (
    id INTEGER PRIMARY KEY,
    intervalSchemeId INTEGER NOT NULL REFERENCES IntervalScheme ON DELETE CASCADE,
    targetLevelOfKnowledge INTEGER AS Int NOT NULL CHECK (targetLevelOfKnowledge > 0),
    value TEXT NOT NULL CHECK (datetime('2019-12-31', value) IS NOT NULL),
    UNIQUE(intervalSchemeId, targetLevelOfKnowledge)
);

INSERT INTO Interval(intervalSchemeId, targetLevelOfKnowledge, value)
VALUES (0, 1, '8 hours'),
       (0, 2, '2 days'),
       (0, 3, '7 days'),
       (0, 4, '21 days'),
       (0, 5, '2 months'),
       (0, 6, '6 months');

CREATE TABLE Pronunciation (
    id INTEGER PRIMARY KEY,
    name TEXT NOT NULL DEFAULT '',
    questionLanguage TEXT AS Locale,
    questionAutoSpeak INTEGER AS Boolean NOT NULL DEFAULT 0 CHECK (questionAutoSpeak IN (0, 1)),
    answerLanguage TEXT AS Locale,
    answerAutoSpeak INTEGER AS Boolean NOT NULL DEFAULT 0 CHECK (answerAutoSpeak IN (0, 1)),
    doNotSpeakTextInBrackets INTEGER AS Boolean NOT NULL DEFAULT 0 CHECK (doNotSpeakTextInBrackets IN (0, 1))
);

INSERT INTO Pronunciation(id) VALUES (0);

CREATE TABLE ExercisePreference (
    id INTEGER PRIMARY KEY,
    name TEXT NOT NULL DEFAULT '',
    randomOrder INTEGER AS Boolean NOT NULL DEFAULT 1 CHECK (randomOrder IN (0, 1)),
    testMethod TEXT AS TestMethod NOT NULL DEFAULT 'Manual',
    intervalSchemeId INTEGER DEFAULT 0 REFERENCES IntervalScheme ON DELETE SET DEFAULT,
    pronunciationId INTEGER NOT NULL DEFAULT 0 REFERENCES Pronunciation ON DELETE SET DEFAULT,
    isQuestionDisplayed INTEGER AS Boolean NOT NULL DEFAULT 1 CHECK (isQuestionDisplayed IN (0, 1)),
    cardReverse TEXT AS CardReverse NOT NULL DEFAULT 'Off'
);

INSERT INTO ExercisePreference(id) VALUES (0);

CREATE TABLE WalkingModePreference (
    keyGesture TEXT AS KeyGesture NOT NULL PRIMARY KEY,
    keyGestureAction TEXT AS KeyGestureAction NOT NULL
);

INSERT INTO WalkingModePreference
VALUES ('VOLUME_UP_SINGLE_PRESS', 'SET_CARD_AS_REMEMBER'),
       ('VOLUME_UP_DOUBLE_PRESS', 'MOVE_TO_NEXT_CARD'),
       ('VOLUME_UP_LONG_PRESS', 'SPEAK_QUESTION'),
       ('VOLUME_DOWN_SINGLE_PRESS', 'SET_CARD_AS_NOT_REMEMBER'),
       ('VOLUME_DOWN_DOUBLE_PRESS', 'MOVE_TO_PREVIOUS_CARD'),
       ('VOLUME_DOWN_LONG_PRESS', 'SPEAK_ANSWER');

CREATE TABLE SpeakPlan (
    id INTEGER PRIMARY KEY,
    name TEXT NOT NULL DEFAULT ''
);

INSERT INTO SpeakPlan(id) VALUES (0);

CREATE TABLE SpeakEvent (
    id INTEGER PRIMARY KEY,
    speakPlanId INTEGER NOT NULL REFERENCES SpeakPlan ON DELETE CASCADE,
    ordinal INTEGER NOT NULL,
    value TEXT AS SpeakEvent NOT NULL,
    UNIQUE (speakPlanId, ordinal)
);

INSERT INTO SpeakEvent(speakPlanId, ordinal, value)
VALUES (0, 1, 'SPEAK_QUESTION'),
       (0, 2, 'DELAY(2)'),
       (0, 3, 'SPEAK_ANSWER'),
       (0, 4, 'DELAY(1)');